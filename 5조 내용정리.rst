============
5조 내용정리
============


주제
----------------------------------------

 Practice 5(github에 SSH 키 업로드하기)

 Practice 13(README.rst 파일 작성해보기)

----------------------------------------


--------------------------------------
Practice 5(github에 SSH 키 업로드하기)
--------------------------------------

1. $ ssh-keygen -t rsa -b 4096를 입력창에 쳐서 SSH key를 생성한다.
< 비밀번호를 치는 문항들이(2개) 나오는데 수업시간에는 따로 비밀번호를 생성하지 않고 엔터를 쳐서 넘어감>

2. $ ~/.ssh/id_rsa.pub를 입력창에 친다(또는 $ cat ~/.ssh/id_rsa.pub)

3. 그러면 긴 문장의 키가 발생한다(ssh로 시작됨). 이것을 전부 복사한다.

4. github 홈페이지에 접속해서 내 repository에 있는 contributhon-2018-knu에 접속한다.

5. 이곳의 Settigs를 클릭하고 왼쪽 베너의 'Deploy keys'를 클릭한다.

6. 오른쪽 'Add deploy key'를 누른다.

7. 제목을 입력하고 밑에 있는 커다란 창에 복사한 키를 붙여넣는다.

8. 'Allow write access'를 누르고 ssh키를 생성한다.

---------------------------------------
Practice 13(README.rst 파일 작성해보기)
---------------------------------------

1. 팀원 중 1명이  https://github.com/openstack-kr/contributhon-2018-knu/issues 페이지에 팀 정보가 추가되는 부분을 이슈로 등록한다.
(예시 : 제목-"[Team5] 팀원 정보 추가")

2. 또다른 팀원은 포맷에 맞게 팀원의 정보를 작성한다.

3. 팀원 중 한명이 커밋 메시지를 작성한다.(커밋 메세지란 쉽게 말하면 변경사항을 적어두는것)

4. 풀리퀘스트를 올린다.

# 좋은 git commit 메세지를 작성하기위한 8가지 약속

1. 제목과 본문을 한 줄 띄워 분리하기

2. 제목은 영문 기준 50자 이내

3. 제목 첫 글자를 대문자로

4. 제목 끝에 '.' 금지

5. 제목은 명령조로

6. Github - 제목(또는 본문)에 이슈번호 붙이기

7. 본문은 영문 기준 72자마다 줄 바꾸기

8. 본문은 '어떻게' 보다 '무엇을', '왜'에 맞춰서 작성하기
